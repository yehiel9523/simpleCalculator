{"version":3,"sources":["Screen.js","Button.js","OperatorButton.js","EqButton.js","ClearButton.js","Context.js","App.js","reportWebVitals.js","index.js"],"names":["Screen","screen","scrArr","join","length","className","Button","id","on","onClick","plus","scr","eq","toggle","ClearButton","Context","React","createContext","theme","setTheme","ContextComponnent","children","useState","Provider","value","App","setScreen","setEq","useEffect","operator","setS","calc","num1","num2","console","log","arr","startIndex","res","i","push","parseInt","slice","isNaN","useContext","isShabbat","Date","style","background","color","foreground","buttons","EqButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.620d0a4b.chunk.js","sourcesContent":["\r\nexport default function Screen({ scrArr }) {\r\n    let screen = scrArr.join('');\r\n    if (screen.length > 20)\r\n        screen = 'too long';\r\n    return (\r\n\r\n        <div className=\"screen\">{screen\r\n            // .map((item) => item)\r\n        }</div>\r\n\r\n    )\r\n\r\n}","\r\nexport default function Button({ id, on }) {\r\n\r\n    return (\r\n        <button className=\"button digit\" onClick={() => on(id)} >{id}</button>\r\n\r\n    )\r\n}\r\n","export default function plus({ id, on, scr }) {\r\n\r\n    return (\r\n        <button className=\"button operator\" onClick={() => {\r\n            // if (scr.lastIndexOf(id) < scr.length - 1)\r\n            if (typeof scr[scr.length - 1] === 'number')\r\n                on(id)\r\n        }\r\n        } >{id}</button>\r\n    )\r\n}","export default function ({ id, on, eq, toggle, scr }) {\r\n    return (\r\n        <button className=\"button calculate\" onClick={() => {\r\n            if (scr.length >= 3) {\r\n                // on(id);\r\n                eq(toggle);\r\n            }\r\n\r\n\r\n        }}  >{id}</button>\r\n    )\r\n}\r\n","export default function ClearButton({ id, on }) {\r\n    return (\r\n        <button className=\"button clear\" onClick={\r\n            () => on()\r\n        }\r\n        >{id}</button>);\r\n\r\n}","import React, { useState, useEffect, Children } from 'react';\r\n\r\nexport const Context = React.createContext({\r\n    theme: 'light',\r\n    setTheme: () => { }\r\n});\r\n\r\nexport default function ContextComponnent({ children }) {\r\n    const [theme, setTheme] = useState('light');\r\n    return (\r\n        <Context.Provider value={\r\n            {\r\n                theme,\r\n                setTheme\r\n            }\r\n        }>\r\n            {children}\r\n        </Context.Provider>\r\n\r\n    );\r\n\r\n}","import './App.css';\nimport { useState, useEffect, useContext } from 'react';\nimport Screen from './Screen';\nimport Button from './Button';\nimport OparatorButton from './OperatorButton';\nimport EqButton from './EqButton';\nimport ClearButton from './ClearButton';\nimport React from 'react';\nimport ContextComponnent, { Context } from './Context';\nimport { isShabbat } from 'shabbatpackage';\n\n\n\nfunction App() {\n  const [screen, setScreen] = useState([]);\n  const [eq, setEq] = useState(false);\n  useEffect(() => {\n    operator();\n  }, [eq]);\n  const setS = (value) => {\n    setScreen([...screen, value])\n  };\n  const clearS = () => {\n    setScreen([])\n  };\n  const calc = (num1, operator, num2) => {\n    if (operator === \"+\")\n      return num1 + num2;\n    if (operator === \"-\")\n      return num1 - num2;\n    if (operator === \"*\")\n      return num1 * num2;\n    if (operator === \"/\")\n      return num1 / num2;\n    else\n      console.log('wrong oparator');\n  }\n  const operator = () => {\n    if (screen.length >= 3) {\n      const arr = [];\n      let startIndex = 0;\n      let res = screen[0];\n      for (let i = 0; i < screen.length; i++) {\n        if (typeof screen[i] !== 'number') {\n          arr.push(parseInt(screen.slice(startIndex, i).join('')));\n          arr.push(screen[i]);\n          startIndex = i + 1;\n        }\n      }\n      if (!isNaN(parseInt(screen.slice(startIndex).join(''))))\n        arr.push(parseInt(screen.slice(startIndex).join('')));\n      for (let i = 0; i < arr.length - 2; i += 2) {\n        res = calc(arr[i], arr[i + 1], arr[i + 2]);\n        arr[i + 2] = res;\n      }\n      if (arr.length > 2)\n        setScreen([res]);\n    }\n  }\n\n  const buttons = () => {\n    let res = [];\n    for (let i = 0; i <= 9; i++) {\n      res.push(<Button id={i} on={setS} />)\n    }\n    return res;\n  }\n  const theme = useContext(Context);\n  return (\n    <ContextComponnent>{\n      isShabbat(new Date()) ? <h1>shabbat</h1> :\n        <div className=\"App\" style={{ background: theme.background, color: theme.foreground }}>\n          <div className=\"calculator\">\n            <Screen scrArr={screen} />\n            {\n              buttons()\n            }\n            <OparatorButton id='+' on={setS} scr={screen} />\n            <OparatorButton id='-' on={setS} scr={screen} />\n            <OparatorButton id='*' on={setS} scr={screen} />\n            <OparatorButton id='/' on={setS} scr={screen} />\n            <EqButton id='=' on={setS} eq={setEq} toggle={!eq} scr={screen} />\n            <ClearButton id='c' on={clearS} />\n          </div>\n        </div>}\n    </ContextComponnent>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}